TCDIR=c:\tc
CC=$(TCDIR)\tcc
LIB=$(TCDIR)\lib
TLIB=$(TCDIR)\tlib
# Using large memory model, xslparse.c use of floating point seems to need it.
MDL=l
# TODO: build this file from .in to define -D\"@PACKAGE_VERSION@\"
CFLAGS=-v -w -m$(MDL) -DHAVE_LANGINFO -DHAVE_STRDUP -DCATDOC_VERSION="0.95"
OBJ=charsets.obj substmap.obj reader.obj writer.obj fileutil.obj langinfo.obj analyze.obj confutil.obj rtfread.obj numutils.obj sheet.obj xlsparse.obj ole.obj strftime.obj pptparse.obj getopt.obj

.c.obj:
	$(CC) -c $(CFLAGS) -I../compat $*

# NOTE: If you built the other .exe programs, you must run `make -fmakefxls.tc clean` first.
all: xls2csv.exe

# xls2csv calls fscanf and strtod, so needs floating point, so link in
# a dummy floating point function.
xls2csv.exe: xls2csv.obj catdoc.lib force_fp.obj
	$(CC) -v -w -m$(MDL) xls2csv.obj catdoc.lib force_fp.obj

# NOTE: Copy getopt.c from Borland Turbo C's \TC into ..\compat
getopt.obj: ..\compat\getopt.c
	$(CC) -c $(CFLAGS) -I../compat ../compat/getopt.c
langinfo.obj: ..\compat\langinfo.c
	$(CC) -c $(CFLAGS) -I../compat ../compat/langinfo.c
strftime.obj: ..\compat\strftime.c
	$(CC) -c $(CFLAGS) -I../compat ../compat/strftime.c

force_fp.obj: ..\compat\force_fp.c
	$(CC) -c $(CFLAGS) -I../compat ../compat/force_fp.c

catdoc.lib: $(OBJ) catdoc.rsp
	$(TLIB) /E catdoc @catdoc.rsp

clean:
	del *.obj
	# Don't delete the other .exe programs.
	del xls2csv.exe
	del catdoc.lib
